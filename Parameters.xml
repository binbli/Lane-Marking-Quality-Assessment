<?xml version="1.0" encoding="UTF-8"?>
<Document>
    <Solvers>
        <RoadSegment>
            <!--
            dataRoot 	   = directory from which relative paths to images are given in dataFile
            dataFile 	   = file listing relative paths of images to test
            saveVizImg	   = true if overlaid images are desired
            vizImgPrefix  = prefix name for saved image
            segImgPrefix  = prefix put before the name of segmented image
            overlayedRoot = directory where overlaid images would be stored
            -->
            <SolverInstance
                    dataRoot="/home/binbin/disk/project-code/lane_quality_assessment/ICNet-master/laneAssess/data/2011_09_26/2011_09_26_drive_0056_sync/image_02/data/"
                    dataFile="/home/binbin/disk/project-code/lane_quality_assessment/ICNet-master/laneAssess/data/2011_09_26/demo.txt"
                    segRoot="/home/binbin/disk/project-code/lane_quality_assessment/ICNet-master/laneAssess/data/2011_09_26/2011_09_26_drive_0056_sync/image_02/segment_img/"
                    saveVizImg="true"
                    vizImgPrefix="overlayed_"
                    segImgPrefix="segmented_"
                    overlayedRoot="/home/binbin/disk/project-code/lane_quality_assessment/ICNet-master/laneAssess/data/2011_09_26/2011_09_26_drive_0056_sync/image_02/overlayed_img/"/>
        </RoadSegment>

        <LMsfromCam>
            <!-- k = percent of pixels to label as lanes -->
            <KPercentExtractor k="8"/>

            <!-- dataRoot 	   = directory from which relative paths to images are given in dataFile
             dataFile 	       = file listing relative paths of images to test
             segRoot 	       = directory where binary segmented images are stored
             refinedRoot       = directory where refined and overlaid images should be stored
             saveVizImg	  	   = true if overlaid images are desired
             vizImgPrefix	   = prefix put before the name of overlaid image
             refinedImgPrefix  = prefix put before the name of refined image -->
            <SolverInstance
                    dataRoot="/home/binbin/disk/project-code/lane_quality_assessment/ICNet-master/laneAssess/data/2011_09_26/2011_09_26_drive_0056_sync/image_02/data/"
                    dataFile="/home/binbin/disk/project-code/lane_quality_assessment/ICNet-master/laneAssess/data/2011_09_26/demo.txt"
                    segRoot="/home/binbin/disk/project-code/lane_quality_assessment/ICNet-master/laneAssess/data/2011_09_26/2011_09_26_drive_0056_sync/image_02/segment_img/"
                    refinedRoot="/home/binbin/disk/project-code/lane_quality_assessment/ICNet-master/laneAssess/data/2011_09_26/2011_09_26_drive_0056_sync/image_02/lane_from_img/"
                    OverlayRoot="/home/binbin/disk/project-code/lane_quality_assessment/ICNet-master/laneAssess/data/2011_09_26/2011_09_26_drive_0056_sync/image_02/overlayed_img/"
                    saveVizImg="true"
                    vizImgPrefix="Overlayed_"
                    refinedImgPrefix="thredholded_"/>
        </LMsfromCam>

        <VeloPtsProjectCam>
            <!-- segRoot 	   = directory where segmented images are stored
             maxWidth 	       = points with |y| <= |maxWidth| would only be considered (y is defined with respect to the lidar frame of reference)
             maxWidth 	       = points with |x| <= |maxLength| would only be considered (x is defined with respect to the lidar frame of reference)
             refinedRoot	   = directory where refined images are stored
             refImgPrefix	   = prefix before all refined images
             segImgPrefix	   = prefix before all segmented images
             outputFile		   = file where all points that lie in the intersection would be stored
             saveVizImg 	   = true if image which has circles at all intersected points is needed
             vizImgPrefix      = prefix before the visualization image (one with circles)
             printOnly2D	   = true if only x and y coordinates (lidar space) must be printed in file
             dThrehold         = distance threshold value for ransac
             nIter             = maximum iteration for ransac
             -->
            <LMintersection
                    segRoot="/home/binbin/disk/project-code/lane_quality_assessment/ICNet-master/laneAssess/data/2011_09_26/2011_09_26_drive_0056_sync/image_02/segment_img/"
                    maxWidth="3"
                    maxLength="20"
                    refinedRoot="/home/binbin/disk/project-code/lane_quality_assessment/ICNet-master/laneAssess/data/2011_09_26/2011_09_26_drive_0056_sync/image_02/lane_from_img/"
                    refImgPrefix="thredholded_"
                    segImgPrefix="segmented_"
                    outputFile="intersected3DPts.txt"
                    saveVizImg="true"
                    vizImgPrefix="intersected_"
                    printOnly2D="false"
                    dThrehold="0.15"
                    nIter="5000"
            />

            <!-- segRoot 	   = directory where segmented images are stored
             segImgPrefix	   = prefix before all segmented images
             outputFilePrefix  = prefix before all output files
             saveVizImg 	   = true if image which has circles at all intersected points is needed
             vizImgPrefix      = prefix before the visualization image (one with circles)
             printProjectedPts = true if points are to be printed after projecting to image space
             minPoints		   = minimum number of points to be there for an entry to go in file
             printProjectedPts = true if print the points in file
             -->
            <SurfaceDataMaker
                    segRoot="/home/binbin/disk/project-code/lane_quality_assessment/ICNet-master/laneAssess/data/2011_09_26/2011_09_26_drive_0056_sync/image_02/segment_img/"
                    segImgPrefix="segmented_"
                    dataFile="/home/binbin/disk/project-code/lane_quality_assessment/ICNet-master/laneAssess/data/2011_09_26/demo.txt"
                    outputFilePrefix="lidarRoad2DPts_"
                    saveVizImg="false"
                    vizImgPrefix="lidar_"
                    minPoints="15"
                    printProjectedPts="true"
            />

            <!-- dataRoot 	   = directory from which relative paths to images are given in dataFile
             dataFile 	       = file listing relative paths of images to test
             veloRoot 	       = directory where .bin files are stored containing Lidar points
             calibRoot         = directory where calibration files are stored
             outputRoot	  	   = directory where any output should be stored
             retentionFrequency= only 1 of every retentionFrequency number of lidar points would be considered
             camNum 	       = the camera number used (0,1,2,3)
             minX			   = the minimum x coordinate a Lidar point must have to be considered to lie on the image -->
            <LidarImageProjector saveVizImg="true" vizImgPrefix="avg_" maxDist="5"/>
            <LaneQualityChecker dx="20.0" dy="3.0"/>
            <SolverInstance
                    dataRoot="/home/binbin/disk/project-code/lane_quality_assessment/ICNet-master/laneAssess/data/2011_09_26/2011_09_26_drive_0056_sync/image_02/data/"
                    dataFile="/home/binbin/disk/project-code/lane_quality_assessment/ICNet-master/laneAssess/data/2011_09_26/demo.txt"
                    veloRoot="/home/binbin/disk/project-code/lane_quality_assessment/ICNet-master/laneAssess/data/2011_09_26/2011_09_26_drive_0056_sync/velodyne_points/data/"
                    calibRoot="/home/binbin/disk/project-code/lane_quality_assessment/ICNet-master/laneAssess/data/2011_09_26/2011_09_26-calib/"
                    outputRoot="/home/binbin/disk/project-code/lane_quality_assessment/ICNet-master/laneAssess/data/2011_09_26/2011_09_26_drive_0056_sync/image_02/intersect_img_lidar/"
                    retentionFrequency="3"
                    camNum="2"
                    minX="5"/>
        </VeloPtsProjectCam>


        <TLinkage>
            <Samplers maxIterationsFactor="10" maxTries = "3">
                <Uniform/>
                <!-- sigma 	   	   = an implementation detail (should be good at 5)
                 maxDiff 	       = maximum difference to tolerate while sampling (in m or degrees)
                 measurementWay    = way to measure "distance"
                                     AbsVerticalDegree if the angle with respect to y axis is measured between points
                                    Euclidean if simple geometric distance is supposed to be measured-->
                <DistBased sigma="3" maxDiff="60" measurementWay="AbsVerticalDegree" shouldXUnique="true"/>
            </Samplers>

            <Models>
                <!-- minShift = minimum distance to push a line by when finding parallel line on other side
                       maxShift = maximum distance to push a line by when finding parallel line on other side
                     resolution = distance by which each increment happens
                     errorThreshold = the maximum average least square distance from all points in a cluster to the parallel line constructed
                -->
                <Line3D minShift="2.7" maxShift="5" resolution="0.025" errorThreshold="1"/>
                <BSpline minSamples="8" regularizationConst="2" resolution="0.25" minX="5" maxX="80"/>
            </Models>

            <!-- inlierThreshold = maximum distance between a model and a sample that fits the model-->
            <PreferenceFinders inlierThreshold="0.5">
                <Exp divFactor="5"/>
                <Hard/>
                <Gauss divFactor="4"/>
                <Tukey/>
            </PreferenceFinders>

            <OutlierRejectors>
                <MaxSizeChange/>
                <KLargest k="2"/>
            </OutlierRejectors>
            <!--
                 dataFile = file that lists all points
                 shouldTranspose = true if colums in dataFile = number of dimensions of points
                 modelFile = file which would store all model parameters
                 saveClusters = true if clusters should be saved
                 clusterFile  = file which would store all clusters
                 preferenceFinder = name of preference finder (any child of PreferenceFinders node)
                 sampler = name of sampler to use (any child of Samplers node (for DistBased, use PreferNear as its name)
                 outlierRejector = name of outlier rejector (None or any child of OutlierRejectors node)
                 samplesPerDataPt = total samples generated would samplesPerDataPt * data points
                 minShift = minimum distance to shift the model
                 maxShift = maximum distance to shift the model
                 shiftIncrement = distance interval to shift the model
                 errorThreshold = threshold setting for T-linkage
                 -->
            <SolverInstance
                    dataFile="/home/binbin/disk/project-code/lane_quality_assessment/ICNet-master/laneAssess/data/2011_09_26/2011_09_26_drive_0056_sync/image_02/intersect_img_lidar/intersected3DPts.txt"
                    shouldTranspose="true"
                    modelFile="/home/binbin/disk/project-code/lane_quality_assessment/ICNet-master/laneAssess/data/2011_09_26/2011_09_26_drive_0056_sync/velodyne_points/lidar_res/lineModel/spline3DModels.txt"
                    saveClusters="true"
                    clusterFile="/home/binbin/disk/project-code/lane_quality_assessment/ICNet-master/laneAssess/data/2011_09_26/2011_09_26_drive_0056_sync/velodyne_points/lidar_res/lineCluster/spline3DClusters.txt"
                    preferenceFinder="Exp"
                    sampler="PreferNear"
                    outlierRejector="None"
                    samplesPerDataPt="5"
                    minShift="2.7"
                    maxShift="10"
                    shiftIncrement="0.02"
                    errorThreshold="1"
            />
        </TLinkage>

        <!-- eps, maxMinPts = usual parameters of DBScan
              minMinPts = minimum number of minPts if minPts decline with distance
              declineSlope = slope by which minPts reduces as distance increases (should be +ve)
              dataRoot = directory where all files generated by SurfaceDataMaker are stored
              dataFile = file which lists image names of images to test
              inputFilePrefix = prefix with which files are saved by SurfaceDataMaker (should equal outputFilePrefix attribute of surface data maker)
              outputFilePrefix = prefix of all output files
              shouldTranspose = true if number of columns in input file equal dimensions of points
              outputRoot = directory where all output should be stored
              -->
        <DBScan eps="30" maxMinPts="30" minMinPts="5" minX="6" declineSlope="0"
                dataRoot="/home/binbin/disk/project-code/lane_quality_assessment/ICNet-master/laneAssess/data/2011_09_26/2011_09_26_drive_0056_sync/lidar_res/LIDAR"
                dataFile="/home/binbin/disk/project-code/lane_quality_assessment/ICNet-master/laneAssess/data/2011_09_26/demo.txt"
                inputFilePrefix="lidarRoad2DPts_"
                outputRoot="/home/binbin/disk/project-code/lane_quality_assessment/ICNet-master/laneAssess/data/2011_09_26/2011_09_26_drive_0056_sync/DBSCAN"
                outputFilePrefix="dbs_"
                shouldTranspose="true"/>

        <!-- imgRoot = directory from which relative paths are listed in imgFile
             imgFile = file that stores all relative paths to images
             veloRoot = directory which stores all bin files containing Lidar points
             ratioFile = directory which store the metrics related to lane quality
             saveVizImg = true if the spine lane model is diplayed on image
             lassAsses  = true if the program runs at lane quality assessment mode
             vizImgPrefix = directory where the spline lane image is saved
             -->
        <LaneDetector
                dataRoot="/home/binbin/disk/project-code/lane_quality_assessment/ICNet-master/laneAssess/data/2011_09_26/2011_09_26_drive_0056_sync/image_02/data/"
                dataFile="/home/binbin/disk/project-code/lane_quality_assessment/ICNet-master/laneAssess/data/2011_09_26/demo.txt"
                veloRoot="/home/binbin/disk/project-code/lane_quality_assessment/ICNet-master/laneAssess/data/2011_09_26/2011_09_26_drive_0056_sync/velodyne_points/data/"
                ratiosFile = "/home/binbin/disk/project-code/lane_quality_assessment/ICNet-master/laneAssess/data/2011_09_26/ratio.txt"
                saveVizImg="true"
                lassAsses="false"
                vizImgPrefix="/home/binbin/disk/project-code/lane_quality_assessment/ICNet-master/laneAssess/data/2011_09_26/2011_09_26_drive_0056_sync/image_02/splineLane/spline_"
        />
    </Solvers>

    <Main solver="LaneDetector" debug="true"/>

</Document>

<!-- Example
<Main solver="RoadSegment" debug="true"/>
<Main solver="KPercentExtractor" debug="true"/>
<Main solver="LMsintersection" debug="true"/>
<Main solver="BSplineTLinkage" debug="true"/>
<Main solver="LaneDetector" debug="true"/>
-->